// Code generated by protoc-gen-go. DO NOT EDIT.
// source: etcd.proto

package etcd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	ClusterIP            string   `protobuf:"bytes,3,opt,name=ClusterIP,proto3" json:"ClusterIP,omitempty"`
	MeshExternal         bool     `protobuf:"varint,4,opt,name=MeshExternal,proto3" json:"MeshExternal,omitempty"`
	Ports                []*Port  `protobuf:"bytes,5,rep,name=Ports,proto3" json:"Ports,omitempty"`
	CreationTimestamp    string   `protobuf:"bytes,6,opt,name=CreationTimestamp,proto3" json:"CreationTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_1d128536f9625047, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Service) GetClusterIP() string {
	if m != nil {
		return m.ClusterIP
	}
	return ""
}

func (m *Service) GetMeshExternal() bool {
	if m != nil {
		return m.MeshExternal
	}
	return false
}

func (m *Service) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

type Port struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	Protocol             string   `protobuf:"bytes,3,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_1d128536f9625047, []int{1}
}
func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (dst *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(dst, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type Node struct {
	NodeName             string            `protobuf:"bytes,1,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	Ip                   string            `protobuf:"bytes,2,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Az                   string            `protobuf:"bytes,3,opt,name=Az,proto3" json:"Az,omitempty"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_1d128536f9625047, []int{2}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetAz() string {
	if m != nil {
		return m.Az
	}
	return ""
}

func (m *Node) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Endpoint struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	NodeName             string   `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	Ports                []*Port  `protobuf:"bytes,4,rep,name=Ports,proto3" json:"Ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_etcd_1d128536f9625047, []int{3}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Endpoint) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Endpoint) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Endpoint) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "etcd.Service")
	proto.RegisterType((*Port)(nil), "etcd.Port")
	proto.RegisterType((*Node)(nil), "etcd.Node")
	proto.RegisterMapType((map[string]string)(nil), "etcd.Node.LabelsEntry")
	proto.RegisterType((*Endpoint)(nil), "etcd.Endpoint")
}

func init() { proto.RegisterFile("etcd.proto", fileDescriptor_etcd_1d128536f9625047) }

var fileDescriptor_etcd_1d128536f9625047 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0x54, 0x12, 0xb7, 0xb4, 0x5b, 0x40, 0xb0, 0x42, 0xc8, 0xaa, 0x38, 0x44, 0x39, 0xf5, 0x80,
	0x72, 0x80, 0x0b, 0x70, 0xab, 0xaa, 0x1e, 0x8a, 0xa0, 0xaa, 0x02, 0x3f, 0xe0, 0xa6, 0x2b, 0x11,
	0x91, 0xc6, 0x91, 0xe3, 0x56, 0xb4, 0xff, 0xc4, 0xa7, 0xf0, 0x4f, 0xc8, 0x76, 0x08, 0xe5, 0x75,
	0xe1, 0xe4, 0x9d, 0x99, 0xb5, 0x37, 0xb3, 0x13, 0x00, 0xd2, 0xe9, 0x22, 0x2e, 0x95, 0xd4, 0x12,
	0x99, 0xa9, 0xa3, 0x37, 0x0f, 0xf6, 0x1e, 0x48, 0xad, 0xb3, 0x94, 0x10, 0x81, 0x4d, 0xc5, 0x92,
	0xb8, 0x17, 0x7a, 0x83, 0x6e, 0x62, 0x6b, 0x3c, 0x83, 0xae, 0x39, 0xab, 0x52, 0xa4, 0xc4, 0x7d,
	0x2b, 0x7c, 0x12, 0x46, 0x1d, 0xe5, 0xab, 0x4a, 0x93, 0x9a, 0xcc, 0x78, 0xe0, 0xd4, 0x86, 0xc0,
	0x08, 0xf6, 0xef, 0xa9, 0x7a, 0x1a, 0xbf, 0x68, 0x52, 0x85, 0xc8, 0x39, 0x0b, 0xbd, 0x41, 0x27,
	0xf9, 0xc2, 0x61, 0x08, 0xad, 0x99, 0x54, 0xba, 0xe2, 0xad, 0x30, 0x18, 0xf4, 0x2e, 0x20, 0xb6,
	0x5f, 0x68, 0xa8, 0xc4, 0x09, 0x78, 0x0e, 0xc7, 0x23, 0x45, 0x42, 0x67, 0xb2, 0x78, 0xcc, 0x96,
	0x54, 0x69, 0xb1, 0x2c, 0x79, 0xdb, 0xce, 0xfa, 0x29, 0x44, 0xb7, 0xc0, 0xcc, 0xb5, 0x5f, 0xbd,
	0xa0, 0xd3, 0xac, 0x8d, 0x83, 0xc4, 0xf5, 0xf5, 0xa1, 0x33, 0x33, 0xeb, 0x48, 0x65, 0x5e, 0x1b,
	0x68, 0x70, 0xf4, 0xea, 0x01, 0x9b, 0xca, 0x05, 0x99, 0x26, 0x73, 0xee, 0x3c, 0xd8, 0x60, 0x3c,
	0x04, 0x7f, 0x52, 0xd6, 0x9b, 0xf1, 0x27, 0xa5, 0xc1, 0xc3, 0x6d, 0xfd, 0x94, 0x3f, 0xdc, 0x62,
	0x0c, 0xed, 0x3b, 0x31, 0xa7, 0xbc, 0xe2, 0xcc, 0x3a, 0x3c, 0x75, 0x0e, 0xcd, 0xfd, 0xd8, 0x09,
	0xe3, 0x42, 0xab, 0x4d, 0x52, 0x77, 0xf5, 0xaf, 0xa1, 0xb7, 0x43, 0xe3, 0x11, 0x04, 0xcf, 0xb4,
	0xa9, 0xa7, 0x9a, 0x12, 0x4f, 0xa0, 0xb5, 0x16, 0xf9, 0xea, 0x23, 0x0d, 0x07, 0x6e, 0xfc, 0x2b,
	0x2f, 0xda, 0x42, 0x67, 0x5c, 0x2c, 0x4a, 0x99, 0x15, 0xfa, 0x1f, 0x59, 0xee, 0x9a, 0x0c, 0xbe,
	0x99, 0x6c, 0x52, 0x62, 0x7f, 0xa4, 0x34, 0x6f, 0xdb, 0x9f, 0xea, 0xf2, 0x3d, 0x00, 0x00, 0xff,
	0xff, 0x88, 0xd2, 0xbc, 0xbf, 0x62, 0x02, 0x00, 0x00,
}
